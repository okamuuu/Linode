= MySQL導入 =

'''''ファイルの改竄を検出するためにTripwireを導入します。導入時のファイル状態をデータベース化し、そのデータベースとファイルの現状を比較することにより、ファイルの追加・変更・削除をチェックします。'''''

== インストール ==

{{{
% sudo yum -y install mysql-server
}}}

== 再作成 ==

''MySQL''データファイル用のディレクトリを一度削除してから再作成します。

{{{
% sudo rm -fr /var/lib/mysql
% sudo mkdir -p /var/lib/mysql/blog
% sudo chown -R mysql:mysql /var/lib/mysql
}}}

バックアップ用ディレクトリを作成

{{{
% sudo mkdir /mysql_backup
% sudo chown mysql:mysql /mysql_backup
}}}

設定ファイルを修正

{{{
% sudo vi /etc/my.cnf
}}}

{{{
[mysqld]
user=mysql
datadir=/var/lib/mysql
innodb_data_home_dir=/var/lib/mysql
innodb_data_file_path=ibdata1:1000M:autoextend
innodb_log_group_home_dir=/var/lib/mysql
innodb_log_files_in_group=2
innodb_log_file_size=100M
innodb_buffer_pool_size=300M
innodb_log_buffer_size=8M
port=3306
socket=/var/lib/mysql/mysql.sock
log-bin=/var/lib/mysql/blog/irc-web01
sync_binlog=1
default-table-type=innodb
default-character-set=utf8
[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

[mysql]
default-character-set=utf8
}}}

''MySQL''を起動

{{{
% sudo /sbin/service mysqld start
}}}

MySQLを自動起動に設定します。

{{{
% sudo /sbin/chkconfig mysqld on
% sudo /sbin/chkconfig --list mysqld
}}}

MySQL初期設定

{{{
% sudo mysql_secure_installation

Enter current password for root (enter for none): [空ENTER]
Set root password? [Y/n] Y
New password: [irc-mysql-root]
Re-enter new password: [irc-mysql-root]
Remove anonymous users? [Y/n] Y
Disallow root login remotely? [Y/n] Y
Remove test database and access to it? [Y/n] Y
Reload privilege tables now? [Y/n] Y
}}}

mysql用のユーザー(dbuser)を作成して、ログアウト

{{{
mysql -u root -p
mysql> grant all privileges on dbuser.* to dbuser identified by 'your-password';
mysql> exit
}}}

今度はdbuserでMySQLサーバーへアクセス

{{{
% mysql -u dbuser -p
}}}

databaseを作成します。

{{{
mysql> create database dbuser;
mysql> show databases;
}}}

以上でMySQLテスト環境が整いました。


Navicat8 LightでDB操作
 無料で使用できるGUIツールでも操作できるようにしておくと便利です。
http://www.navicat.jp/mysql/download/index_lite.html
19.1.2.2	mysqldumpでのバックアップ手順を確認
バックアップ動作を確認するためにテストテーブルを作成します。
mysql> use ilcadj1;
mysql> create table test( num int, name varchar(50) );
Query OK, 0 rows affected (0.01 sec)
mysql> insert into test values ( 1, 'test' );
mysql> select * from test;
mysql> exit
バックアップ方法を確認します。
 * mysqldumpの場合
 * mysqlhotcopyの場合
19.1.2.3	mysqldumpでのバックアップ取得方法確認
以下の作業を行い、バックアップが取れる状態であることを確認します。
 - mysqldumpで生成されたSQL文を使用してリストア
 - データを修正します。
 - この時点でMySQLに異常があったと仮定して、ここでMySQLを停止します。
 - まだ取得できていないバイナリログがあれば取得。
SQL文を取得
mysqldump --user=root --password=irc-mysql-root  --single-transaction --master-data=2 --flush-logs --hex-blob ilcadj1 > /backup/mysql-dump.sql
DBを更新
mysql> update test set name='test2' where num = 1;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0
/sbin/service mysqld stop
まだ取得できていないバイナリログがあれば取得します。今回はすべてコピーしておきます。
cp -fr /var/lib/mysql/blog/ /backup/
リストア時、ロールフォワード時に、バイナリログを生成させないために、初期化パラメータファイルmy.cnfのlog-binに関する行をコメントアウトしておきます。
#log-bin=/var/lib/mysql/blog/irc-web01
インスタンスをリモートからの接続を禁止した状態で起動します。
mysqld_safe --defaults-file=/etc/my.cnf --skip-networking --skip-grant-tables
元に戻すSQLを発行します。
mysql --user=root --database=ilcadj1 < /backup/mysql-dump.sql
あとは障害が発生した日時より後のバイナリログを使用してロールフォワードリカバリを実行します。最初に、バイナリデータからSQL文を生成します。
mysqlbinlog --disable-log-bin /backup/blog/colinux.000007 > /backup/recover.sql
リカバリ以降に行われたSQL文を発行してリストア終了
mysql --user=root --database=ilcadj1 < /backup/recover.sql
セーフモード状態のインスタンスを停止
mysqladmin shutdown --user=root --password==irc-mysql-root 
初期化パラメータを正常に戻す
vi /etc/my.cnf
log-bin=/var/lib/mysql/blog/irc-web01
再起動
/sbin/service mysqld start
接続をして復元されていることを確認します。
19.1.2.4	mysqlhotcopyでのバックアップ取得方法確認
mysqlhotcopy -u root -p irc-mysql-root ilcadj1 /mysql_backup/
ls /backup/ilcadj1
db.opt  test.frm
上記のファイルを/etc/my.cnfで設定されているDBファイルに差し替えればOK
後はバイナリログをSQL文に変更して差分を実行します。
19.2	DBファイルのバックアップを自動実行
19.2.1	実行スクリプトを準備
ファイル作成
# vi /root/mysqcopy..sh
下記内容を記述します。
rm -fr /mysql_backup/*
mysqlhotcopy -u root -p irc-mysql-root ilcadj1 /mysql_backup/
実行権限付与
# chmod +x /root/mysqlcopy.sh
19.2.2	毎日サーバー側にバックアップファイルを作成
/etc/crontabに下記を追記します
0 3 * * * root /root/mysqlcopy.sh
